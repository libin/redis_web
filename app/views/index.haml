
#summary.well
  .button-group
    %ul.unstyled
      %li
        %p.title redis version
        %p.value= RedisAbstractor.get_info("redis_version")
      %li
        %p.title uptime sec
        %p.value= RedisAbstractor.get_info("uptime_in_seconds")
      %li
        %p.title memory
        %p.value= RedisAbstractor.get_info("used_memory")
      %li
        %p.title clients
        %p.value= RedisAbstractor.get_info("connected_clients")

    %label
      Change Database
      %select{:name => 'db_selector', :id => 'db_selector'}
        - selected = AppConfig::Redis.options[:db]
        - RedisAbstractor.databases.each do |db, meta|
          %option{:value => db, :selected => (selected == db)}= database_description(db, meta)

%table.table.table-bordered
  %thead
    %tr
      %th
      %th key
      %th type
      %th ttl
      %th value
  %tbody
    - RedisAbstractor.dump.each do |record|
      %tr
        %td
          %a.delete_record{ :href => "#", "data-key" => record['key'], :class => 'btn btn-mini btn-danger'} X
        %td= record['key']
        %td= record['type']
        %td= record['ttl']
        %td
          %pre.prettyprint.pre-scrollable= format_code(record['value'])

.well
  .button-group
    %button#delete_all.btn.btn-danger Delete All Data
